#include <ESP8266WiFi.h>

#include <WiFiClient.h>

#include <ESP8266WebServer.h>

//Include the Servo Library

#include <Servo.h>


#define ServoPort D1
#define led D2
#define SOUND_VELOCITY 0.034
#define CM_TO_INCH 0.393701

//proxy

const int trigPin = 12; //d6
const int echoPin = 14; //d5
long duration;
float distanceCm;
float distanceInch;

//wifi
const char* ssid = "War Machine 2";

const char* password = "12345678908";

Servo myservo;

ESP8266WebServer server(80);

/*void handlemaster(int value)
{
  if(value==1)
  {
    myservo.write(180);
    delay(10000);
    myservo.write
    }
  }*/

void handleServo(){

  String POS = server.arg("servoPOS");

  int pos = POS.toInt();
if(pos==1)
{
  pos=180;
  }
  myservo.write(pos);
  Serial.print("Servo Angle:");
  Serial.println(pos);
  delay(2000);
  myservo.write(0);
  server.send(200, "text/html", "success");
}


void setup() {

  Serial.begin(115200);
  pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPin, INPUT); // Sets the echoPin as an Input
  pinMode(led, OUTPUT);

  myservo.attach(ServoPort);

  WiFi.begin(ssid, password);

  Serial.println(ssid);

  Serial.println("Connecting to WiFi");

  while (WiFi.status() != WL_CONNECTED) {

    delay(1000);

    Serial.println(".");

  }

  Serial.println(WiFi.localIP());



  server.on("/setPOS",handleServo);

  server.begin();  

  Serial.println("HTTP server started");
  
  digitalWrite(led,HIGH);
}


void loop() {

 server.handleClient();

 //proxy code

digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
 
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  
 
  duration = pulseIn(echoPin, HIGH);
  
 
  distanceCm = duration * SOUND_VELOCITY/2;
  if(distanceCm<5){
  while(distanceCm<=5)
  {
    myservo.write(180);
    delay(500);
    //servo rescan for loop
    digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  duration = pulseIn(echoPin, HIGH);
  distanceCm = duration * SOUND_VELOCITY/2;
  Serial.print("IN loop dist : ");
  Serial.println(distanceCm);
  Serial.println("in the loop !!!");
    }
    Serial.println("Exited !!!!!!!!");
    Serial.print("Exit loop dist : ");
    Serial.print(distanceCm);
    delay(100);
    myservo.write(0);
  }
}